/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

export default function Model({ ...props }) {
  const group = useRef();
  const { nodes, materials } = useGLTF('/model.glb');

  useFrame((state) => {
    const t = state.clock.getElapsedTime();
    group.current.rotation.z = -0.2 - (1 + Math.sin(t / 1.5)) / 20;
    group.current.rotation.x = Math.cos(t / 4) / 8;
    group.current.rotation.y = Math.sin(t / 4) / 8;
    group.current.position.y = (1 + Math.sin(t / 1.5)) / 10;
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Node.geometry} material={materials.model} />
    </group>
  );
}

useGLTF.preload('/model.glb');
