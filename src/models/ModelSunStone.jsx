/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useEffect, useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

export const ModelSunStone = ({ ...props }) => {
  const group = useRef();
  const { nodes, materials } = useGLTF('/model.glb');

  useFrame((state) => {
    const t = state.clock.getElapsedTime();
    group.current.rotation.z = -0.2 - (1 + Math.sin(t / 1.5)) / 20;
    group.current.rotation.x = 20 + Math.cos(t / 4) / 8;
    group.current.rotation.y = Math.sin(t / 4) / 8;
    group.current.position.y = (1 + Math.sin(t / 1.5)) / 10;
  });

  useEffect(() => {
    group.current.rotation.x = 90;
  }, []);

  return (
    <group ref={group} {...props} dispose={null}>
      {/* <PresentationControls
        global={true} // Spin globally or by dragging the model
        snap={false} // Snap-back to center (can also be a spring config)
        speed={3} // Speed factor
        zoom={1} // Zoom factor when half the polar-max is reached
        rotation={[0.24, 0, 0]} // Default rotation
        polar={[0, Math.PI / 2]} // Vertical limits
        azimuth={[-Infinity, Infinity]} // Horizontal limits
        config={{ mass: 1, tension: 170, friction: 26 }} // Spring config
      > */}
      <mesh
        rotateY={200}
        geometry={nodes.Node.geometry}
        material={materials.model}
      />
      {/* </PresentationControls> */}
    </group>
  );
};

useGLTF.preload('/model.glb');
