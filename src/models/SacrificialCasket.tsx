/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Mesh001: THREE.Mesh;
    Mesh001_1: THREE.Mesh;
  };
  materials: {
    ['Material #26']: THREE.MeshStandardMaterial;
    ['Material #25']: THREE.MeshStandardMaterial;
  };
};

const SacrificialCasket = ({ ...props }: JSX.IntrinsicElements['group']) => {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(
    '/sacrificialcasket-transformed.glb'
  ) as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0, 0, 0]} scale={0.007} rotation={[0.3, 1, 0]}>
        <mesh
          geometry={nodes.Mesh001.geometry}
          material={materials['Material #26']}
        />
        <mesh
          geometry={nodes.Mesh001_1.geometry}
          material={materials['Material #25']}
        />
      </group>
    </group>
  );
};

export default SacrificialCasket;

useGLTF.preload('/sacrificialcasket-transformed.glb');
