/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useEffect, useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    ['1936060002_(offersten)']: THREE.Mesh;
  };
  materials: {
    ['Material #48']: THREE.MeshStandardMaterial;
  };
};

const SacrificalStone = ({ ...props }) => {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials } = useGLTF(
    '/sacrificialstone-transformed.glb'
  ) as GLTFResult;

  useEffect(() => {
    if (group.current) {
      group.current.rotation.x = 89.5;
    }
  }, []);

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes['1936060002_(offersten)'].geometry}
        material={materials['Material #48']}
        position={[0, -0.2, 0]}
        scale={0.15}
      />
    </group>
  );
};

export default SacrificalStone;

useGLTF.preload('/sacrificialstone-transformed.glb');
