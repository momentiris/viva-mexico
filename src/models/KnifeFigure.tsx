/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    ['1944020034_(knivfigur)']: THREE.Mesh;
  };
  materials: {
    ['Material #44']: THREE.MeshStandardMaterial;
  };
};

const KnifeFigure = ({ ...props }: JSX.IntrinsicElements['group']) => {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(
    '/knivfigur-transformed.glb'
  ) as GLTFResult;

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes['1944020034_(knivfigur)'].geometry}
        material={materials['Material #44']}
        position={[0, -0.6, 0]}
        scale={0.015}
      />
    </group>
  );
};

export default KnifeFigure;

useGLTF.preload('/knivfigur-transformed.glb');
